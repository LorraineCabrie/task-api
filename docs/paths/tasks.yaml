get:
  summary: List all tasks
  tags:
    - Tasks
  parameters:
    - name: completed
      in: query
      required: false
      description: Filter tasks by completion status
      schema:
        type: boolean
        example: true
    - name: limit
      in: query
      required: false
      description: Maximum number of tasks to return
      schema:
        type: integer
        example: 10
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/Task.yaml
post:
  summary: Create a new task
  tags:
    - Tasks
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/schemas/Task.yaml
  responses:
    '201':
      description: Task created successfully
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Task.yaml
    '400':
      $ref: ../components/responses/BadRequest.yaml

/tasks/{id}:
  get:
    summary: Retrieve a single task by its ID
    description: Returns a single task resource identified by its unique ID.
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          example: 1
        description: The unique ID of the task to retrieve.
    responses:
      "200":
        description: Task retrieved successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "400":
        description: Invalid ID (not a number)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidationError"
            examples:
              invalidId:
                summary: ID not a number
                value:
                  error: "Validation failed"
                  details: ["ID must be a number"]
      "404":
        description: Task not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFoundError"
            examples:
              notFound:
                summary: Task with given ID does not exist
                value:
                  error: "Task not found"

